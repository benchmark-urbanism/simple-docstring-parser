[project]
name = "yapper"
version = "0.2.1"
description = "Parser for converting python docstrings to .astro files for the Astro static site generator."
readme = 'README.md'
requires-python = ">=3.9,<4.0"
license-expression = 'MIT'
keywords = [
    'python',
    'static-site-generator',
    'astro',
    'parser',
    'documentation',
    'docstrings',
]
authors = [{ name = "Gareth Simons", email = "info@benchmarkurbanism.com" }]
maintainers = [{ name = "Gareth Simons", email = "info@benchmarkurbanism.com" }]
classifiers = ["Programming Language :: Python"]
dependencies = [
    "docstring-parser<1.0,>=0.13",
    "dominate<3.0.0,>=2.6.0",
    "python-slugify<7.0.0,>=6.1.1",
    "Markdown<4.0.0,>=3.3.6",
    "pyyaml>=6.0",
]
[tool.pdm]
[project.optional-dependencies]
[tool.pdm.dev-dependencies]
dev = ["pytest>=7.1.1"]

[project.urls]
homepage = "https://github.com/benchmark-urbanism/yapper"
documentation = "https://github.com/benchmark-urbanism/yapper"
repository = "https://github.com/benchmark-urbanism/yapper"

[build-system]
requires = ["pdm-pep517>=0.12.0", "tomli>=1.1.0"]
build-backend = "pdm.pep517.api"

[project.scripts]
yapper = "yapper.runner:cli"

[tool.black]
line-length = 120
color = true

[tool.pylint.master]
ignore = ["_version.py"]
disable = [
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "pointless-string-statement",
    "logging-fstring-interpolation",
]
jobs = 0
output-format = "colorized"

[tool.pylint.basic]

[tool.pylint.design]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.logging]
logging_format_style = "new"

# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
include = ["yapper"]
exclude = ["**/node_modules", "**/__pycache__", "**/__pypackages__"]
typeCheckingMode = "strict"
stubPath = "yapper/stubs"
useLibraryCodeForTypes = true
reportMissingTypeStubs = true

[tool.pydocstyle]
# http://www.pydocstyle.org/en/stable/error_codes.html
ignore = [
    "D100", # Missing docstring in public module
    "D200", # One-line docstring should fit on one line with quotes
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
]
match = "(?!test_).*\\.py"
match_dir = "^(?!(__pypackages__|build|demos|docs|tests)).*"

[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 120
known_first_party = ["yapper"]
atomic = true
filter_files = true
src_paths = ["yapper", "tests"]

[tool.pytest.ini_options]
console_output_style = "count"
log_cli = true
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.coverage.run]
source = ["yapper"]
branch = true
omit = ["**/__init__.py"]

[tool.coverage.report]
include = ["yapper/**"]
omit = ["**/__init__.py"]

[tool.pdm.scripts]
docstyle = "pydocstyle --config=pyproject.toml"
formatting = { shell = "black --config=pyproject.toml ./ && isort --settings-file=pyproject.toml ./" }
typechecks = "pyright"
linting = "pylint --rcfile=pyproject.toml ./yapper"
tests = "pytest ./tests"
# coverage can't trace jitted files
coverage_run = "coverage run pytest"
coverage_report = { shell = "coverage report --show-missing --skip-empty && coverage lcov" }
build = { shell = "pdm run formatting && pdm run typechecks && pdm run linting && pdm run tests && python -m build" }
publish = { shell = "pdm run build && pdm run build_docs && pdm publish -u shongololo -v" }
