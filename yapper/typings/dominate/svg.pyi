"""
This type stub file was generated by pyright.
"""

from dominate.tags import html_tag

"""
This module consists of classes"""
__license__ = ...
_ATTR_GLOBAL = ...
_ATTR_EVENTS = ...
DASHED_ATTRIBUTES = ...

class svg_tag(html_tag):
    @staticmethod
    def clean_attribute(attribute): ...

class svg(svg_tag): ...

class animate(svg_tag):
    """
    The  animate SVG element is u"""

    ...

class animateMotion(svg_tag):
    """
    The <animateMotion> element c"""

    ...

class animateTransform(svg_tag):
    """
    The animateTransform element"""

    is_single = ...

class circle(svg_tag):
    """
    The <circle> SVG element is a"""

    ...

class clipPath(svg_tag):
    """
    The <clipPath> SVG element de"""

    ...

class defs(svg_tag):
    """
    The <defs> element is used to"""

    ...

class desc(svg_tag):
    """
    The <desc> element provides a"""

    ...

class ellipse(svg_tag):
    """
    An ellipse element for svg co"""

    ...

class g(svg_tag):
    """
    The <g> SVG element is a cont"""

    ...

class image(svg_tag):
    """
    The <image> SVG element inclu"""

    ...

class line(svg_tag):
    """
    The <line> element is an SVG"""

    ...

class linearGradient(svg_tag):
    """
    The <linearGradient> element"""

    ...

class marker(svg_tag):
    """
    The <marker> element defines"""

    ...

class mask(svg_tag):
    """
    The <mask> element defines an"""

    ...

class mpath(svg_tag):
    """
    The <mpath> sub-element for t"""

    ...

class pattern(svg_tag):
    """
    The <pattern> element defines"""

    ...

class polygon(svg_tag):
    """
    A polygon element for svg con"""

    ...

class polyline(svg_tag):
    """
    A polyline element for svg co"""

    ...

class radialGradient(svg_tag):
    """
    The <radialGradient> element"""

    ...

class tspan(svg_tag):
    """
    The SVG <tspan> element defin"""

    ...

class path(svg_tag):
    """
    A path element for svg contai"""

    ...

class rect(svg_tag):
    """
    A rectangle element for svg c"""

    ...

class stop(svg_tag):
    """
    The SVG <stop> element define"""

    ...

class switch(svg_tag):
    """
    The <switch> SVG element eval"""

    ...

class symbol(svg_tag):
    """
    The use of symbol elements fo"""

    ...

class text(svg_tag):
    """
    The SVG <text> element draws"""

    ...

class textPath(svg_tag):
    """
    To render text along the shap"""

    ...

class title(svg_tag):
    """
    The <title> element provides"""

    ...

class tspan(svg_tag):
    """
    The SVG <tspan> element defin"""

    ...

class use(svg_tag):
    """
    The <use> element takes nodes"""

    ...

class view(svg_tag):
    """
    A view is a defined way to vi"""

    ...

class filter(svg_tag): ...
class feBlend(svg_tag): ...
class feColorMatrix(svg_tag): ...
class feComponentTransfer(svg_tag): ...
class feComposite(svg_tag): ...
class feConvolveMatrix(svg_tag): ...
class feDiffuseLighting(svg_tag): ...
class feDisplacementMap(svg_tag): ...
class feFlood(svg_tag): ...
class feGaussianBlur(svg_tag): ...
class feImage(svg_tag): ...
class feMerge(svg_tag): ...
class feMorphology(svg_tag): ...
class feOffset(svg_tag): ...
class feSpecularLighting(svg_tag): ...
class feTile(svg_tag): ...
class feTurbulence(svg_tag): ...
class feDistantLight(svg_tag): ...
class fePointLight(svg_tag): ...
class feSpotLight(svg_tag): ...
